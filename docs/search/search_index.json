{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"About","text":"<p>SAGE stands for Shaping Asteroids with Genetic Evolution, and is an inversion technique for asteroid shape modeling. Taking lightcurves, adaptive optics images, stellar occultation cords or radar delay-Doppler images the method creates 3D shape models and spin state (spin axis orientation and period) of an asteroid best explaining the data. Original paper describing the method can be found here.</p> <p>The aim of this project is to collect bits of software written throughout the years of developing the method, unify, rewrite and better them, and finally glue everything together with modern C++.</p>"},{"location":"ProjectStructure.html","title":"Project's structure","text":"<p><code>premake5</code> is used as underlying build system. Sage is organized into workspace and projects. The <code>premake5.lua</code> file in root directory defines the workspace, global include directories and includes individual projects. Projects are stored in separate directories, each containing its own <code>premake5.lua</code> file.</p>"},{"location":"ProjectStructure.html#external-libraries","title":"External libraries","text":"<p>Libraries used in projects should be stored in <code>vendor</code> folder. Rules for building can be added to the premake file stored there.</p>"},{"location":"ProjectStructure.html#documentation","title":"Documentation","text":"<p>Documentation is stored in <code>documentation/source</code> folder. The <code>index.md</code> is the main page.</p> <p>Documentation is generated automatically when the whole projetc is build. You need to have <code>mkdocs</code> installed. See dependencies section.</p> <p>To generate documentation locally:</p> <pre><code>cd docs\nmake\n</code></pre> <p>then open <code>documentation/build/html/index.html</code> in a web browser.</p>"},{"location":"ProjectStructure.html#dependencies","title":"Dependencies","text":"<ul> <li>fmt</li> <li>gtest</li> <li>mkdocs</li> </ul>"},{"location":"UserManual.html","title":"User Manual","text":""},{"location":"UserManual.html#how-to-build-sage","title":"How to build Sage","text":"<p>First, you need to generate <code>Makefile</code>s. To do so, run this command in project's root directory:</p> <pre><code>tools/linux/premake5 gmake\n</code></pre> <p>and then just run</p> <pre><code>make\n</code></pre> <p>to build the whole project. The default cofiguration is <code>Debug</code>. To build <code>Release</code> configuration run</p> <pre><code>make config=release\n</code></pre> <p>Binaries are located in <code>build/&lt;Target&gt;/&lt;Project&gt;</code> directory, where <code>&lt;Target&gt;</code> is either <code>Build</code> or <code>Release</code>.</p>"},{"location":"UserManual.html#asteroid-parameters","title":"Asteroid Parameters","text":"<p>As part of each config (see sections below) you have to specify asteroid parameters as a JSON object, e.g.:</p> <pre><code>\"asteroidParams\": {\n    \"eclipticLongitude\": 170,\n    \"eclipticLatitude\": -32,\n    \"period\": 12.123,\n    \"epoch\": 2457999.0334,\n    \"rotPhaseForEpoch\": 34.123\n}\n</code></pre>"},{"location":"UserManual.html#synthetic-observation-generation","title":"Synthetic observation generation","text":"<p>You can use certain project's within Sage to generate synthetic observations based on config files.</p> <p><code>eclipticLongitude</code> and <code>eclipticLatitude</code> in degrees define spin axis orientation in ecliptic reference frame. The rotation is defined by rotation phase (<code>rotPhaseForEpoch</code>, in degrees) at an Julian Day <code>epoch</code>, and a rotation <code>period</code> in hours.</p>"},{"location":"UserManual.html#lightcurves","title":"Lightcurves","text":"<p>Work in progress</p>"},{"location":"UserManual.html#adaptive-optics","title":"Adaptive Optics","text":"<p>Work in progress</p>"},{"location":"UserManual.html#radar-delay-doppler","title":"Radar delay-Doppler","text":"<p>Work in progress</p>"}]}